name: default

on:
  push:
    branches:
      - main

permissions:
  packages: write # needed for ghcr.io access

env:
  OCI_REPO: "oci://ghcr.io/ds886/manifests/${{ github.event.repository.name }}"


jobs:
  get-version:
    outputs:
      appversion: ${{ steps.get_Version.outputs.test  }}
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          echo "test=$(grep semver version.properties|cut -d= -f2)" >> "$GITHUB_OUTPUT"

  build:
    runs-on:  ubuntu-latest
    steps:
      - name: Initial setup
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build with Gradle
        run: |
          pwd
          ls
          ./gradlew  clean build 

      - uses: actions/upload-artifact@v4
        with:
          name: art-build
          path: build


  test:
    runs-on:  ubuntu-latest
    steps:
      - name: Initial setup
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3


      - name: Checkout repo
        uses: actions/checkout@v4


      - name: Build with Gradle
        run: |
          ./gradlew  build test

  publish-jar:
    runs-on:  ubuntu-latest
    needs:  
      - get-version
      - build
      - test
    steps:
      - name: Initial setup
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: art-build
          path: build
          merge-multiple: true

      - name: Build with Gradle
        run: |
          pwd
          ls
          ./gradlew  jibBuildTar

      - uses: actions/upload-artifact@v4
        with:
          name: art-jar
          path: |
            build/libs

  publish-jib:
    runs-on:  ubuntu-latest
    needs:  
      - get-version
      - build
      - test
    steps:
      - name: Initial setup
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: art-build
          path: build
          merge-multiple: true

      - name: Build with Gradle
        run: |
          pwd
          ls
          ./gradlew  jibBuildTar

      - name: rename jib
        env:
          appversion: ${{ needs.get-version.outputs.appversion}}
        run: |
          mv build/jib-image.tar build/simplejava-docker-${appversion}.tar

      - uses: actions/upload-artifact@v4
        with:
          name: art-jib
          path: |
            build/*.tar

  package-helm:
    runs-on:  ubuntu-latest
    needs:  
      - get-version
      - build
      - test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4


      - name: Chart  Push
        uses: appany/helm-oci-chart-releaser@v0.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN}}
        with:
          name: simplejava
          repository: ds886/simplejava
          tag: ${{ needs.get-version.outputs.appversion}}
          path: helm # Default charts/{name}
          registry: ghcr.io
          registry_username: ${{ secrets.GH_USER }}
          registry_password: ${{ secrets.GH_TOKEN}}

      - name: rename helm
        env:
          appversion: ${{ needs.get-version.outputs.appversion}}
        run: |
          mv simplejava-${appversion}.tgz simplejava-chart-${appversion}.tgz

      - uses: actions/upload-artifact@v4
        with:
          name: art-helm
          path: |
            *.tgz



  bump-version:
    runs-on:  ubuntu-latest
    needs:  
      - get-version
      - package-helm 
      - publish-jib
      - publish-jar
    steps:
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ssh-key: "${{ secrets.SSH_PKEY }}"
          fetch-depth: 0

      - name: Update version pipeline - kustomize
        run: |
          sed -i "s/pipeline-date:.*$/pipeline-date: \"$(date "+%Y%m%d%S%3N")\"/" kustomize/deployment.yaml

      - name: Update version helm
        run: |
          sed -i "s/version: .*/version: $(grep semver version.properties|cut -d= -f2)/g" helm/Chart.yaml

      - name: bump version java
        run: |
          gradle incrementPatch

      - name: Push  changes
        run: |
          git add .
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "GHA: Update build time [no ci]"
          git push
          git tag $(grep semver version.properties|cut -d= -f2)
          git push --tags



  release:
    runs-on:  ubuntu-latest
    needs:  
      - get-version
      - bump-version
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ssh-key: "${{ secrets.SSH_PKEY }}"
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: art-build
          path: build
          merge-multiple: true

      - uses: actions/download-artifact@v4
        with:
          name: art-jar
          path: build
          merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          name: art-jib
          path: build
          merge-multiple: true

      - uses: actions/download-artifact@v4
        with:
          name: art-helm
          merge-multiple: true

      # this might fail succesfully a probable solution is this or change action- https://github.com/softprops/action-gh-release/issues/194

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/libs/simplejava-${{ needs.get-version.outputs.appversion}}.jar
            build/simplejava-docker-${{ needs.get-version.outputs.appversion}}.tar
            build/simplejava-docker-${{ needs.get-version.outputs.appversion}}.tar
            simplejava-chart-${{ needs.get-version.outputs.appversion}}.tgz  
          tag_name: ${{ needs.get-version.outputs.appversion}}
          name: "Release"
          body: |
              Release
          draft: false
          prerelease: false
          token: "${{ secrets.GH_TOKEN  }}"
