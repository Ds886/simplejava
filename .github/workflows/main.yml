name: default

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on:  ubuntu-latest
    steps:
      - name: Initial setup
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build with Gradle
        run: |
          pwd
          ls
          ./gradlew  clean build 

      - uses: actions/upload-artifact@v4
        with:
          name: art-build
          path: build


  test:
    runs-on:  ubuntu-latest
    needs:  build
    steps:
      - name: Initial setup
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3


      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: art-build
          path: build
          merge-multiple: true

      - name: Build with Gradle
        run: |
          ./gradlew  test

  publish-jar:
    runs-on:  ubuntu-latest
    needs:  
      - build
      - test
    steps:
      - name: Initial setup
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: art-build
          path: build
          merge-multiple: true

      - name: Build with Gradle
        run: |
          pwd
          ls
          ./gradlew  jibBuildTar

      - uses: actions/upload-artifact@v4
        with:
          name: art-jar
          path: |
            build/libs

  publish-jib:
    runs-on:  ubuntu-latest
    needs:  
      - build
      - test
    steps:
      - name: Initial setup
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: art-build
          path: build
          merge-multiple: true

      - name: Build with Gradle
        run: |
          pwd
          ls
          ./gradlew  jibBuildTar

      - uses: actions/upload-artifact@v4
        with:
          name: art-jib
          path: |
            build/*.tar

  release:
    runs-on:  ubuntu-latest
    needs:  
      - build 
      - test
      - publish-jar
      - publish-jib
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ssh-key: "${{ secrets.SSH_PKEY }}"
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: art-jar
          path: |
            build/libs
          merge-multiple: true

      - uses: actions/download-artifact@v4
        with:
          name: art-jib
          path: |
            build/jib-image.tar
          merge-multiple: true

      - name: Get version
        uses: mathiasvr/command-output@v2.0.0
        id: get_version
        with:
          run: |
            grep semver version.properties|cut -d= -f2

      - name: rename jib
        run: |
          echo "****" && ls  build build/libs && echo "****"
          mv build/jib-image.tar build/simplejava-docker-$(grep semver version.properties|cut -d= -f2).tar
          
      - name: rename jib
        env:
          TESTING: "${{ steps.get_version.outputs.stdout }}"
        run: |
          echo "****" && echo "${TESTING}" && echo "****"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/libs/simplejava-${{ steps.get_version.outputs.stdout }}.jar
            build/*.tar
          tag_name: ${{ steps.get_version.outputs.stdout }}
          name: "Release ${{ steps.get_version.outputs.stdout }}"
          body: |
              Release ${{ steps.get_version.outputs.stdout }}
          draft: false
          prerelease: false
        

  bump-version:
    runs-on:  ubuntu-latest
    needs:  
      - release
    steps:
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ssh-key: "${{ secrets.SSH_PKEY }}"
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: art-build
          path: build
          merge-multiple: true

      - name: Update version
        run: |
          sed -i "s/pipeline-date:.*$/pipeline-date: \"$(date "+%Y%m%d%S%3N")\"/" kustomize/deployment.yaml
          gradle incrementPatch
          git add version.properties
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add version.properties
          git commit -m "GHA: Update build time [no ci]"
          git tag $(grep semver version.properties|cut -d= -f2)
          git commit -m "GHA: Update tags [no ci]"
          git push --tags

      - uses: actions/upload-artifact@v4
        with:
          name: art-version
          path: |
            version.properties

